{"ast":null,"code":"import Book from './Book';\nlet book1 = new Book(0, \"React\", [\"First answer\", \"Second answer\", \"Third answer\"], \"JavaScript framework\", \"It works with JSX files.\", false);\nlet book2 = new Book(1, \"JSX\", [\"First answer\", \"Second answer\", \"Third answer\"], \"HTML + JavaScript\", \"Server-side scripting. Functions can be returned in pure HTML.\", false);\nlet book3 = new Book(2, \"XML\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Extensible Markup Language\", \"XML was designed to carry data - with focus on what data is. Does not display data.\", false);\nlet book4 = new Book(3, \"the first step to start a project...\", [\"First answer\", \"Second answer\", \"Third answer\"], \"npx create-react-app [name of project]\", \"npm start\", false);\nlet book5 = new Book(4, \"a Component\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Reusable functions\", \"React only re-renders components that have changed. State is like a variable.\", false);\nlet book6 = new Book(5, \"useState\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Re-renders once the function has been manipulated\", \"It’s a React hook - functional compenet that tracks its own data. It takes a reference to the value (variable - but don't refer to this variable in the function), and then a function name. UseState will start at whatever is in its parameter. UseState is how we use a function to a component instead of a class. E.g.: const [count, setCount] = useState(0). A state variable should always be declared at the highest level its needed.\", false);\nlet book7 = new Book(6, \"a Hook\", [\"First answer\", \"Second answer\", \"Third answer\"], \"functional components as opposed to class components\", \"Functional component is a reusable, imported. A function that returns some HTML.\", false);\nlet book8 = new Book(7, \"a Prop\", [\"First answer\", \"Second answer\", \"Third answer\"], \"A generic parameter passed via the function\", \"Object full of properties that we can assign. For example, you can give props to a component and assign them in the component name in app.js.\", false);\nlet book9 = new Book(8, \"OnChange\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Every onChange passes an event object, containing info about the event\", \"This will always give you an event object.\", false);\nlet book10 = new Book(9, \"a Callback Function\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Parent (app.js) passes a State function as props to a child element (colourbutton.js)\", \"The child gets State of parent. This function or state can be a prop. Steps for making a prop: 1. Make a custom prop in your app.js component name i.e. <ColourButton col={'green'}/>. 2. Bring prop as an attribute in the component function name i.e. ColourButton(props). 3. Use it inside your component i.e. style={{backgroundColor: props.col}}. All inline!\", false);\nlet book11 = new Book(10, \"Toggle\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Make a useState(false). Underneath make a toggleClass function (i.e. const toggleClass = () => {setBackground(!background)})\", \"In the button inline make a ternary operator (i.e. style={{ backgroundColor: background ? 'darkslateblue' : 'green' }} ).\", false);\nlet book12 = new Book(11, \"Map\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Like a For loop. Applies a function to an array and returns a new array\", \"Make sure to always put a key right inside the return statement when calling the component.\", false);\nlet book13 = new Book(12, \"Flex\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Flex will always affect the child elements\", \"Full flex is 1. 50% will be 0.5.\", false);\nlet book14 = new Book(12, \"a Class\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Instance of objects\", \"Collection of variables and values. Template for an object that you can create new versions of; blueprint.\", false);\nlet book15 = new Book(12, \"a Constructor\", [\"First answer\", \"Second answer\", \"Third answer\"], \"A method that creates an instance of the class\", \"Every time you make an instance this will run by default, a start-up function for an object.\", false);\nlet bookArray = [book1, book2, book3, book4, book5, book6, book7, book8, book9, book10, book11, book12, book13, book14, book15];\nexport default bookArray;","map":{"version":3,"names":["Book","book1","book2","book3","book4","book5","book6","book7","book8","book9","book10","book11","book12","book13","book14","book15","bookArray"],"sources":["/Users/anameisel/Documents/personal/learning/iungo/Software-Engineering/week-6/244001_bookshop/src/model/BookArray.js"],"sourcesContent":["import Book from './Book'\n\nlet book1 = new Book(0, \"React\", [\"First answer\", \"Second answer\", \"Third answer\"], \"JavaScript framework\", \"It works with JSX files.\", false)\nlet book2 = new Book(1, \"JSX\", [\"First answer\", \"Second answer\", \"Third answer\"], \"HTML + JavaScript\", \"Server-side scripting. Functions can be returned in pure HTML.\", false)\nlet book3 = new Book(2, \"XML\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Extensible Markup Language\", \"XML was designed to carry data - with focus on what data is. Does not display data.\", false)\nlet book4 = new Book(3, \"the first step to start a project...\", [\"First answer\", \"Second answer\", \"Third answer\"], \"npx create-react-app [name of project]\", \"npm start\", false)\nlet book5 = new Book(4, \"a Component\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Reusable functions\", \"React only re-renders components that have changed. State is like a variable.\", false)\nlet book6 = new Book(5, \"useState\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Re-renders once the function has been manipulated\", \"It’s a React hook - functional compenet that tracks its own data. It takes a reference to the value (variable - but don't refer to this variable in the function), and then a function name. UseState will start at whatever is in its parameter. UseState is how we use a function to a component instead of a class. E.g.: const [count, setCount] = useState(0). A state variable should always be declared at the highest level its needed.\", false)\nlet book7 = new Book(6, \"a Hook\", [\"First answer\", \"Second answer\", \"Third answer\"], \"functional components as opposed to class components\", \"Functional component is a reusable, imported. A function that returns some HTML.\", false)\nlet book8 = new Book(7, \"a Prop\", [\"First answer\", \"Second answer\", \"Third answer\"], \"A generic parameter passed via the function\", \"Object full of properties that we can assign. For example, you can give props to a component and assign them in the component name in app.js.\", false)\nlet book9 = new Book(8, \"OnChange\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Every onChange passes an event object, containing info about the event\", \"This will always give you an event object.\", false)\nlet book10 = new Book(9, \"a Callback Function\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Parent (app.js) passes a State function as props to a child element (colourbutton.js)\", \"The child gets State of parent. This function or state can be a prop. Steps for making a prop: 1. Make a custom prop in your app.js component name i.e. <ColourButton col={'green'}/>. 2. Bring prop as an attribute in the component function name i.e. ColourButton(props). 3. Use it inside your component i.e. style={{backgroundColor: props.col}}. All inline!\", false)\nlet book11 = new Book(10, \"Toggle\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Make a useState(false). Underneath make a toggleClass function (i.e. const toggleClass = () => {setBackground(!background)})\", \"In the button inline make a ternary operator (i.e. style={{ backgroundColor: background ? 'darkslateblue' : 'green' }} ).\", false)\nlet book12 = new Book(11, \"Map\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Like a For loop. Applies a function to an array and returns a new array\", \"Make sure to always put a key right inside the return statement when calling the component.\", false)\nlet book13 = new Book(12, \"Flex\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Flex will always affect the child elements\", \"Full flex is 1. 50% will be 0.5.\", false)\nlet book14 = new Book(12, \"a Class\", [\"First answer\", \"Second answer\", \"Third answer\"], \"Instance of objects\", \"Collection of variables and values. Template for an object that you can create new versions of; blueprint.\", false)\nlet book15 = new Book(12, \"a Constructor\", [\"First answer\", \"Second answer\", \"Third answer\"], \"A method that creates an instance of the class\", \"Every time you make an instance this will run by default, a start-up function for an object.\", false)\n\nlet bookArray = [book1, book2, book3, book4, book5, book6, book7, book8, book9, book10, book11, book12, book13, book14, book15]\n\nexport default bookArray"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}